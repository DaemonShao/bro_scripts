@load policy/protocols/smb

module EXPLOIT;

export {
    redef enum Notice::Type += {
        ms09_050
    };

    redef record SumStats::Key += {
        p: port &optional;
        src_host: addr &optional;
    };

    const number: double = 1.0 &redef;
    const epoch = 0.5min &redef;
}

event bro_init()
{
    local r1: SumStats::Reducer = [$stream="conn.exploit.ms09050", $apply=set(SumStats::SUM)];
    SumStats::create([$name="ms09-050",
                      $epoch=epoch,
                      $reducers=set(r1),
                      $threshold = number,
                      $threshold_val(key: SumStats::Key, result: SumStats::Result) =
                      {
                            return result["conn.exploit.ms09050"]$sum;
                      },
                      $threshold_crossed(key: SumStats::Key, result: SumStats::Result) =
                      {
                            local r = result["conn.exploit.ms09050"];
                            NOTICE([$note=ms09_050,
                                    $msg="ms09-050 exploit",
                                    $dst=key$host,
                                    $src=key$src_host,
                                    $p=key$p,
                                    $identifier=cat(key$host)]);
                      }]);

}

event connection_state_remove(c: connection)
{
    if(c?$smb_state && c$smb_state?$current_cmd && c$smb_state$current_cmd?$smb1_offered_dialects)
    {
        local message = c$smb_state$current_cmd$smb1_offered_dialects;
        local messages = "";
        for(i in message)
        {
            messages= messages+message[i];
        }
        print messages;
        if(/\xb4\xff\xff\x3f/ in messages)
        {
            SumStats::observe("conn.exploit.ms09050", SumStats::Key($src_host=c$id$orig_h,$host=c$id$resp_h,$p=c$id$resp_p), SumStats::Observation($num=1));
        }
    }
}
