@load policy/protocols/smb
@load base/frameworks/files
@load base/protocols/ntlm
@load base/frameworks/sumstats

export {
    redef enum Notice::Type += {
        ms17_010
    };

    redef record SumStats::Key += {
        p: port &optional;
        src_host: addr &optional;
    };
}


event smb1_message(c: connection, hdr: SMB1::Header, is_orig:  bool)
{
    if(c?$smb_state && c$smb_state?$current_cmd && c$smb_state$current_cmd?$command){
        local command = c$smb_state$current_cmd$command;

        if (command == "TRANSACTION2_SECONDARY")
        {
            SumStats::observe("ms17_010",
                              SumStats::Key($src_host=c$id$orig_h,$host=c$id$resp_h,$p=c$id$resp_p),
                              SumStats::Observation($num=1));
        }
    }
}


event bro_init()
{
    local r1 = SumStats::Reducer($stream="ms17_010",
                                 $apply=set(SumStats::SUM));

    SumStats::create([$name = "Mybe MS17-010",
                      $epoch = 1sec,
                      $reducers = set(r1),
                      $threshold = 6.0,
                      $threshold_val(key: SumStats::Key, result: SumStats::Result) = 
                      {
                        return result["ms17_010"]$sum;
                      },
                      $threshold_crossed(key: SumStats::Key, result: SumStats::Result) =
                      {
                          NOTICE([$note=ms17_010,
                                  $msg="ms17-010 exploit",
                                  $dst=key$host, 
                                  $src=key$src_host,   
                                  $p=key$p,
                                  $identifier=cat(key$host)]);
                      }]);
}
